/// <reference types="node" />
import { APICredentials, APICredentialsOptions } from "../authentication/credentials";
/**
 * A basic client interface which stores credentials data used for communicating with a server.
 */
export declare abstract class Client<T extends APICredentials<APICredentialsOptions>> {
    protected readonly credentials: T;
    /**
     * Construct a new client using the provided credentials.
     *
     * @param credentials the credentials to use during authentication
     */
    constructor(credentials: T);
    /**
     * Return the client's credentials;
     *
     * @returns the credentials
     */
    getCredentials(): T;
    /**
     * Writes an error to a file (e.g. HTTP response errors).
     *
     * @param error the error
     * @param filename the filename to use for the file
     */
    protected writeErrorFile(error: unknown, filename: string): void;
    private readonly LOG_RESPONSE_INTERVAL_MS;
    /**
     * Starts an informative timer which tells the user for how long they have
     * been waiting for a response already.
     *
     * @param url the request URL
     * @returns the timer's handler
     */
    protected startResponseInterval(url: string): NodeJS.Timer;
}
