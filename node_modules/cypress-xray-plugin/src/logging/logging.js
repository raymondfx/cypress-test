"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logDebug = exports.logWarning = exports.logSuccess = exports.logError = exports.logInfo = void 0;
const chalk_1 = __importDefault(require("chalk"));
const INFO = "INFO";
const ERROR = "ERROR";
const SUCCESS = "SUCCESS";
const WARNING = "WARNING";
const DEBUG = "DEBUG";
const VARIANTS = [INFO, ERROR, SUCCESS, WARNING, DEBUG];
const MAX_PREFIX_LENGTH = Math.max(...VARIANTS.map((s) => s.length));
function prefix(type) {
    return chalk_1.default.white(`| Cypress Xray Plugin | ${type.padEnd(MAX_PREFIX_LENGTH, " ")} |`);
}
function logInfo(...text) {
    console.info(prefix(INFO), chalk_1.default.gray(text.join(" ")));
}
exports.logInfo = logInfo;
function logError(...text) {
    console.error(prefix(ERROR), chalk_1.default.red(text.join(" ")));
}
exports.logError = logError;
function logSuccess(...text) {
    console.log(prefix(SUCCESS), chalk_1.default.green(text.join(" ")));
}
exports.logSuccess = logSuccess;
function logWarning(...text) {
    console.warn(prefix(WARNING), chalk_1.default.yellow(text.join(" ")));
}
exports.logWarning = logWarning;
function logDebug(...text) {
    console.warn(prefix(DEBUG), chalk_1.default.cyan(text.join(" ")));
}
exports.logDebug = logDebug;
