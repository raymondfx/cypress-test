/// <reference types="cypress" />
import { Status } from "../../types/testStatus";
import { DateTimeISO, OneOf } from "../../types/util";
import { XrayTestCloud, XrayTestExecutionResults, XrayTestInfoCloud, XrayTestInfoServer, XrayTestServer } from "../../types/xray/importTestExecutionResults";
/**
 * @template XrayTestType - the Xray test type
 * @template XrayTestInfoType - the Xray test information type
 */
export declare abstract class ImportExecutionResultsConverter<XrayTestType extends OneOf<[XrayTestServer, XrayTestCloud]>, XrayTestInfoType extends OneOf<[XrayTestInfoServer, XrayTestInfoCloud]>> {
    /**
     * Convert Cypress run results into Xray JSON format, ready to be sent to Xray's import
     * execution results endpoint.
     *
     * @param results the run results
     * @returns the Xray JSON data
     */
    convertExecutionResults(results: CypressCommandLine.CypressRunResult): XrayTestExecutionResults<XrayTestType>;
    /**
     * Builds a test entity for an executed test.
     *
     * @param testResult the Cypress test result
     * @return the test entity
     */
    protected abstract getTest(attempt: CypressCommandLine.AttemptResult): XrayTestType;
    /**
     * Extract the Xray status from a {@link Status} value.
     *
     * @param attempt the status value
     * @returns the corresponding Xray test status
     */
    protected abstract getXrayStatus(status: Status): string;
    /**
     * Constructs an {@link XrayTestInfoType} object based on a single
     * {@link CypressCommandLine.TestResult}.
     *
     * @param testResult the Cypress test result
     * @returns the test information
     */
    protected abstract getTestInfo(testResult: CypressCommandLine.TestResult): XrayTestInfoType;
    /**
     * Remove milliseconds from ISO time string. Some Jira Xray instances cannot handle milliseconds in the string.
     *
     * @param time a date time string in ISO format
     * @returns the truncated date time string
     * @example
     *   const time = truncateISOTime("2022-12-01T02:30:44.744Z")
     *   console.log(time); // "2022-12-01T02:30:44Z"
     */
    protected truncateISOTime(time: DateTimeISO): string;
    /**
     * Retrieve the overall start date of multiple Cypress test results.
     *
     * @param attempts the Cypress test results
     * @returns the tests' start date
     */
    protected getAttemptsStartDate(attempts: CypressCommandLine.AttemptResult[]): Date | null;
    /**
     * Retrieve the start date of a single Cypress test result.
     *
     * @param attempt the Cypress test result
     * @returns the test's start date
     */
    protected getAttemptStartDate(attempt: CypressCommandLine.AttemptResult): Date;
    /**
     * Retrieve the end date of multiple Cypress test results.
     *
     * @param attempts the Cypress test results
     * @returns the tests' end date
     */
    protected getAttemptsEndDate(attempts: CypressCommandLine.AttemptResult[]): Date | null;
    /**
     * Retrieve the end date of a single Cypress test result.
     *
     * @param attempt the Cypress test result
     * @returns the test's end date
     */
    protected getAttemptEndDate(attempt: CypressCommandLine.AttemptResult): Date;
    /**
     * Returns a {@link Status} enum value for a single Cypress test result.
     *
     * @param attempt the Cypress test result
     * @returns a corresponding status
     */
    protected getStatus(attempt: CypressCommandLine.AttemptResult): Status;
    /**
     * Returns a step action description truncated to the maximum length Xray
     * allows.
     *
     * @param action the step's action description
     * @returns the truncated or unmodified description if it's short enough
     */
    protected truncateStepAction(action: string): string;
    private mapTestsToTitles;
    private mapAttemptsToTitles;
    private getTestExecutionInfo;
    private getTextExecutionResultSummary;
    private getDescription;
    private getTestIssueKey;
}
