"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseFeatureFile = exports.parseBoolean = void 0;
const gherkin_1 = require("@cucumber/gherkin");
const messages_1 = require("@cucumber/messages");
const fs_1 = require("fs");
/**
 * Parses and returns a boolean value from a string.
 *
 * @param value a string that can be interpreted as a boolean value
 * @returns the corresponding boolean value
 * @see https://www.npmjs.com/package/yn
 */
function parseBoolean(value) {
    value = String(value).trim();
    if (/^(?:y|yes|true|1|on)$/i.test(value)) {
        return true;
    }
    if (/^(?:n|no|false|0|off)$/i.test(value)) {
        return false;
    }
    throw new Error(`Failed to parse boolean value from string: ${value}`);
}
exports.parseBoolean = parseBoolean;
/**
 * Parses a Gherkin document (feature file) and returns the information contained within.
 *
 * @param file the path to the feature file
 * @param encoding the file's encoding
 * @returns an object containing the data of the feature file
 * @example
 *   const data = parseFeatureFile("myTetest.feature")
 *   console.log(data.feature.children[0].scenario); // steps, name, ...
 * @see https://github.com/cucumber/messages/blob/main/javascript/src/messages.ts
 */
function parseFeatureFile(file, encoding = "utf-8") {
    const uuidFn = messages_1.IdGenerator.uuid();
    const builder = new gherkin_1.AstBuilder(uuidFn);
    const matcher = new gherkin_1.GherkinClassicTokenMatcher();
    const parser = new gherkin_1.Parser(builder, matcher);
    return parser.parse((0, fs_1.readFileSync)(file, { encoding: encoding }));
}
exports.parseFeatureFile = parseFeatureFile;
